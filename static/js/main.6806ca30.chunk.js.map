{"version":3,"sources":["components/Square.js","components/Gameboard.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","val","Gameboard","state","value","Array","fill","isXsTurn","i","square","this","slice","setState","index","handleClick","Container","fluid","Jumbotron","Button","variant","Row","Col","md","class","gameArray","map","x","renderSquare","React","Component","SELECTIONS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEe,SAASA,EAAOC,GAC7B,OACE,yBAAQC,UAAU,MAAMC,QAASF,EAAME,QAAvC,UACG,IACAF,EAAMG,IAAK,O,ICDGC,E,kDACnB,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,MAAOC,MAAM,GAAGC,KAAK,MACrBC,UAAU,GAJK,E,+CAQnB,SAAYC,GACV,IAAMC,EAASC,KAAKP,MAAMC,MAAMO,QAChCD,KAAKP,MAAMI,SAAYE,EAAOD,GAAK,IAAQC,EAAOD,GAAK,IACvDE,KAAKE,SAAS,CAAER,MAAOK,EAAQF,UAAWG,KAAKP,MAAMI,a,0BAGvD,SAAaC,EAAGK,GAAQ,IAAD,OACrB,OACE,cAAChB,EAAD,CAEEI,IAAKS,KAAKP,MAAMC,MAAMI,GACtBR,QAAS,kBAAM,EAAKc,YAAYN,KAF3BK,K,oBAOX,WAAU,IAAD,OACP,OACE,eAACE,EAAA,EAAD,CAAWC,MAAM,OAAjB,UACE,eAACC,EAAA,EAAD,WACE,+CACA,+JAIA,4BACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,6BAGJ,cAACC,EAAA,EAAD,CAAKrB,UAAU,4BAAf,SACE,cAACsB,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,qBAAKC,MAAM,aAAX,SACGb,KAAKZ,MAAM0B,UAAUC,KAAI,SAACC,EAAGb,GAAJ,OACxB,EAAKc,aAAaD,EAAGb,mB,GA1CEe,IAAMC,WCFvCC,G,MAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAM7BC,MAJf,WACE,OAAO,cAAC,EAAD,CAAWP,UAAWM,KCMhBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6806ca30.chunk.js","sourcesContent":["import \"./styles/gameboard.css\";\n\nexport default function Square(props) {\n  return (\n    <button className=\"box\" onClick={props.onClick}>\n      {\" \"}\n      {props.val}{\" \"}\n    </button>\n  );\n}\n","import \"./styles/gameboard.css\";\nimport { Container, Jumbotron, Button, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport Square from \"./Square\";\n\nexport default class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: Array(9).fill(null),\n      isXsTurn: true,\n    };\n  }\n\n  handleClick(i) {\n    const square = this.state.value.slice();\n    this.state.isXsTurn ? (square[i] = \"X\") : (square[i] = \"O\");\n    this.setState({ value: square, isXsTurn: !this.state.isXsTurn });\n  }\n\n  renderSquare(i, index) {\n    return (\n      <Square\n        key={index}\n        val={this.state.value[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Container fluid=\"true\">\n        <Jumbotron>\n          <h1>Hello, world!</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for\n            calling extra attention to featured content or information.\n          </p>\n          <p>\n            <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </Jumbotron>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <div class=\"game-board\">\n              {this.props.gameArray.map((x, index) =>\n                this.renderSquare(x, index)\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import Gameboard from \"./components/Gameboard\";\nimport \"./App.css\";\n\nconst SELECTIONS = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfunction App() {\n  return <Gameboard gameArray={SELECTIONS} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}